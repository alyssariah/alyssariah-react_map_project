{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from \"./Components/Home\";\nimport List from \"./Components/List\";\nimport SimpleMap from \"./Components/SimpleMap\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  //setting state to pass down to list\n  const [driverList, setDriverList] = useState([]);\n  const [rideList, setRideList] = useState([]); // //fetching data from google sheet \n  // const pullGoogleSheet = () => {\n  //   let sheetUrl = \"https://spreadsheets.google.com/feeds/list/1uZdRKonnGEAgksvHTd9g6FKBkiQyzk9vf6u2ec7LEdE/od6/public/values?alt=json\"\n  //   fetch(sheetUrl)\n  //   .then(res=>res.json())\n  //   .then(data=>{\n  //     console.log(\"data\", data.feed.entry)\n  //     data.feed.entry.map(async(object, index)=>{\n  //       if(object.gsx$title.$t === \"Driver\"){\n  //         let address= object.gsx$address.$t\n  //         let str = address.replace(/\\s/g, '+');\n  //         let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n  //         let json = await res.json();\n  //         let place = json.results[0].geometry.location\n  //         setDriverList([...driverList, {name: object.gsx$name.$t, address: object.gsx$address.$t, lat: place.lat, lng: place.lng, assign: \"unassigned\"}])\n  //       } else if (object.gsx$title.$t === \"Passenger\"){\n  //         let address= object.gsx$address.$t\n  //         let str = address.replace(/\\s/g, '+');\n  //         let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n  //         let json = await res.json();\n  //         let place = json.results[0].geometry.location\n  //         setRideList([...rideList, {name: object.gsx$name.$t, address: object.gsx$address.$t, lat: place.lat , lng: place.lng, assign: \"unassigned\"}])\n  //         console.log(\"rideList\", rideList)\n  //       }\n  //     })\n  //   })\n  // }\n  //retrieving name and address from home\n\n  const passDriverInfo = (inputName, inputAdd, dLat, dLng) => {\n    setDriverList([...driverList, {\n      name: inputName,\n      address: inputAdd,\n      lat: dLat,\n      lng: dLng\n    }]);\n  };\n\n  const passRideInfo = (inputName, inputAdd, rLat, rLng) => {\n    setRideList([...rideList, {\n      name: inputName,\n      address: inputAdd,\n      lat: rLat,\n      lng: rLng,\n      assign: \"unassigned\"\n    }]);\n  };\n\n  console.log(\"driverList\", driverList);\n  console.log(\"rideList\", rideList);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Home, {\n      passDriverInfo: passDriverInfo,\n      passRideInfo: passRideInfo,\n      setDriverList: setDriverList,\n      driverList: driverList,\n      setRideList: setRideList,\n      rideList: rideList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/map\",\n    render: () => /*#__PURE__*/React.createElement(SimpleMap, {\n      driverList: driverList,\n      rideList: rideList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/list\",\n    render: () => /*#__PURE__*/React.createElement(List, {\n      driverList: driverList,\n      rideList: rideList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/App.js"],"names":["React","useState","useEffect","Home","List","SimpleMap","Switch","Route","Link","Redirect","App","driverList","setDriverList","rideList","setRideList","passDriverInfo","inputName","inputAdd","dLat","dLng","name","address","lat","lng","passRideInfo","rLat","rLng","assign","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Home from \"./Components/Home\"\nimport List from \"./Components/List\"\nimport SimpleMap from \"./Components/SimpleMap\"\nimport {Switch, Route, Link, Redirect} from \"react-router-dom\"\n\nfunction App() {\n  //setting state to pass down to list\n  const [driverList, setDriverList] = useState([])\n  const [rideList, setRideList] = useState([])\n\n  // //fetching data from google sheet \n  // const pullGoogleSheet = () => {\n  //   let sheetUrl = \"https://spreadsheets.google.com/feeds/list/1uZdRKonnGEAgksvHTd9g6FKBkiQyzk9vf6u2ec7LEdE/od6/public/values?alt=json\"\n  //   fetch(sheetUrl)\n  //   .then(res=>res.json())\n  //   .then(data=>{\n  //     console.log(\"data\", data.feed.entry)\n  //     data.feed.entry.map(async(object, index)=>{\n  //       if(object.gsx$title.$t === \"Driver\"){\n  //         let address= object.gsx$address.$t\n  //         let str = address.replace(/\\s/g, '+');\n  //         let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n  //         let json = await res.json();\n  //         let place = json.results[0].geometry.location\n  //         setDriverList([...driverList, {name: object.gsx$name.$t, address: object.gsx$address.$t, lat: place.lat, lng: place.lng, assign: \"unassigned\"}])\n  //       } else if (object.gsx$title.$t === \"Passenger\"){\n  //         let address= object.gsx$address.$t\n  //         let str = address.replace(/\\s/g, '+');\n  //         let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n  //         let json = await res.json();\n  //         let place = json.results[0].geometry.location\n  //         setRideList([...rideList, {name: object.gsx$name.$t, address: object.gsx$address.$t, lat: place.lat , lng: place.lng, assign: \"unassigned\"}])\n  //         console.log(\"rideList\", rideList)\n  //       }\n  //     })\n  //   })\n  // }\n  //retrieving name and address from home\n  const passDriverInfo = (inputName, inputAdd, dLat, dLng) =>{\n    setDriverList([...driverList, {name: inputName, address: inputAdd, lat: dLat, lng: dLng}])\n  }\n  const passRideInfo = (inputName, inputAdd, rLat, rLng) =>{\n    setRideList([...rideList, {name: inputName, address: inputAdd, lat: rLat, lng: rLng, assign: \"unassigned\"}])\n  }\n  console.log(\"driverList\", driverList)\n  console.log(\"rideList\", rideList)\n\n  \n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={()=> <Home passDriverInfo={passDriverInfo} \n                                                 passRideInfo={passRideInfo} \n                                                 setDriverList={setDriverList}\n                                                 driverList={driverList}\n                                                 setRideList={setRideList}\n                                                 rideList={rideList}/>}/>\n        <Route path=\"/map\"  render={()=> <SimpleMap driverList={driverList} \n                                                    rideList ={rideList}/>}/>\n        <Route path=\"/list\" render={()=> <List driverList={driverList} \n                                               rideList={rideList} />}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}