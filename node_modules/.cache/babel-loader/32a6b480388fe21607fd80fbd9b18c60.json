{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js\";\nimport React, { useState } from 'react';\nimport \"./CSS/SimpleMap.css\";\nimport { Link } from \"react-router-dom\";\nimport DriverMarker from \"./DriverMarker\";\nimport RideMarker from \"./RideMarker\";\nimport DriverForm from \"./DriverForm\";\nimport RideForm from \"./RideForm\";\nimport ShowDrivers from \"./ShowDrivers\";\nimport GoogleMapReact from 'google-map-react';\n\nconst SimpleMap = props => {\n  //setting state\n  const [center, setCenter] = useState({\n    lat: 37.4275,\n    lng: -122.169\n  }); // const [centerC, setCenterC] = useState({props.driverList[0].lat, props.driverList[0].lng})\n\n  const [zoom, setZoom] = useState(11);\n  const [driverAddress, setDriverAddress] = useState([]);\n  const [rideAddress, setRideAddress] = useState([{}]);\n  const [currentPassenger, setCurrentPassenger] = useState(\"\");\n  const [displayNames, setDisplayNames] = useState(false);\n\n  const getMapOptions = () => {\n    return {\n      disableDefaultUI: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'on'\n        }]\n      }]\n    };\n  }; //assign page to reset\n\n\n  const resetPage = driverName => {\n    setDisplayNames(!displayNames);\n  }; //showAllDrivers div and function\n\n\n  const assignPass = passenger => {\n    setCurrentPassenger(passenger);\n    setDisplayNames(!props.displayNames);\n  };\n\n  const showAllDrivers = props.driverList.map((object, index) => {\n    return /*#__PURE__*/React.createElement(ShowDrivers, {\n      object: object,\n      resetPage: resetPage,\n      rideList: props.rideList,\n      currentPassenger: currentPassenger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  }); //Pull in addresses from home and transfer into coordinates\n\n  const pullDriverData = props.driverList.map((object, index) => {\n    if (props.driverList.length > 0) {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        driverList: object,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }\n      });\n    }\n  });\n  const pullRideData = props.rideList.map((object, index) => {\n    if (props.rideList.length > 0) {\n      return /*#__PURE__*/React.createElement(RideMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        rideList: object,\n        assignPass: assignPass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      });\n    }\n  }); //setting coordinates\n  // const setDriverCoordinates = (later , longer)=>{\n  //     console.log(\"coordinates\", later, longer)\n  //     setCenter({lat: later, lng: longer})\n  //     setDriverAddress([...driverAddress, {lat: later, lng: longer}])\n  //   } \n  // const setCoordinates = (later , longer)=>{\n  //     console.log(\"coordinates\", later, longer)\n  //     setCenter({lat: later, lng: longer})\n  //     setRideAddress([...rideAddress, {lat: later, lng: longer}])\n  //     console.log(\"Ride Address\", rideAddress)\n  //   }\n  // const createDriverMarkers = driverAddress.map((object, index)=>{\n  //     if (Object.keys(object).length === 0){\n  //      return (\n  //          <>\n  //          </>\n  //      )\n  //     } else {\n  //     return (\n  //         <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n  //     )\n  //     }\n  // })  \n  // const createRideMarkers = rideAddress.map((object, index)=>{\n  //     if (Object.keys(object).length === 0){\n  //      return (\n  //          <>\n  //          </>\n  //      )\n  //     } else {\n  //     return (\n  //         <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n  //     )\n  //     }\n  // }) \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mapInformation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Carpool \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"coordinator\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 34\n    }\n  }))), /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 131\n    }\n  }), \"Home\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 131\n    }\n  }), \"Map\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 153\n    }\n  }), \"Assign\")), displayNames && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allDrivers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exit\",\n    onClick: () => {\n      setDisplayNames(!displayNames);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, showAllDrivers)), /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y'\n    },\n    defaultCenter: center,\n    defaultZoom: zoom,\n    options: getMapOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, pullDriverData, pullRideData));\n};\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js"],"names":["React","useState","Link","DriverMarker","RideMarker","DriverForm","RideForm","ShowDrivers","GoogleMapReact","SimpleMap","props","center","setCenter","lat","lng","zoom","setZoom","driverAddress","setDriverAddress","rideAddress","setRideAddress","currentPassenger","setCurrentPassenger","displayNames","setDisplayNames","getMapOptions","disableDefaultUI","mapTypeControl","streetViewControl","styles","featureType","elementType","stylers","visibility","resetPage","driverName","assignPass","passenger","showAllDrivers","driverList","map","object","index","rideList","pullDriverData","length","pullRideData","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./CSS/SimpleMap.css\"\nimport {Link} from \"react-router-dom\"\nimport DriverMarker from \"./DriverMarker\"\nimport RideMarker from \"./RideMarker\"\nimport DriverForm from \"./DriverForm\"\nimport RideForm from \"./RideForm\"\nimport ShowDrivers from \"./ShowDrivers\"\nimport GoogleMapReact from 'google-map-react';\n\n\nconst SimpleMap = (props) => {\n    //setting state\n    const [center, setCenter] = useState({lat: 37.4275, lng: -122.169});\n    // const [centerC, setCenterC] = useState({props.driverList[0].lat, props.driverList[0].lng})\n    const [zoom, setZoom] = useState(11);\n    const [driverAddress, setDriverAddress] = useState([])\n    const [rideAddress, setRideAddress] = useState([{}])\n    const [currentPassenger, setCurrentPassenger] = useState(\"\")\n    const [displayNames, setDisplayNames] = useState(false)\n\n    const getMapOptions = () => {\n      return {\n        disableDefaultUI: true,\n        mapTypeControl: true,\n        streetViewControl: true,\n        styles: [{ featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'on' }] }],\n      };\n    };\n    \n    //assign page to reset\n    const resetPage = (driverName) => {\n        setDisplayNames(!displayNames)\n    }\n \n    //showAllDrivers div and function\n     const assignPass = (passenger) => {\n        setCurrentPassenger(passenger)\n        setDisplayNames(!props.displayNames)\n    }\n\n    const showAllDrivers = props.driverList.map((object, index) => {\n        return(\n            <ShowDrivers object={object} \n                         resetPage={resetPage}\n                         rideList={props.rideList}\n                         currentPassenger = {currentPassenger}/>    \n        )\n    })\n\n     \n    //Pull in addresses from home and transfer into coordinates\n    const pullDriverData = props.driverList.map((object, index)=> {\n        if(props.driverList.length >0){\n            return (\n                 <DriverMarker lat={object.lat} \n                               lng={object.lng} \n                               key={index} \n                               driverList={object}/>\n                )\n            }   \n        })\n    const pullRideData = props.rideList.map((object, index)=> {\n        if(props.rideList.length >0){\n            return (\n                    <RideMarker lat={object.lat} \n                                lng={object.lng} \n                                key={index} \n                                rideList={object}\n                                assignPass={assignPass}/>\n                )\n            }  \n        })\n\n\n    //setting coordinates\n    // const setDriverCoordinates = (later , longer)=>{\n    //     console.log(\"coordinates\", later, longer)\n    //     setCenter({lat: later, lng: longer})\n    //     setDriverAddress([...driverAddress, {lat: later, lng: longer}])\n    //   } \n    // const setCoordinates = (later , longer)=>{\n    //     console.log(\"coordinates\", later, longer)\n    //     setCenter({lat: later, lng: longer})\n    //     setRideAddress([...rideAddress, {lat: later, lng: longer}])\n    //     console.log(\"Ride Address\", rideAddress)\n    //   }\n\n    // const createDriverMarkers = driverAddress.map((object, index)=>{\n    //     if (Object.keys(object).length === 0){\n    //      return (\n    //          <>\n\n    //          </>\n\n    //      )\n    //     } else {\n    //     return (\n    //         <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n    //     )\n    //     }\n    // })  \n    // const createRideMarkers = rideAddress.map((object, index)=>{\n    //     if (Object.keys(object).length === 0){\n    //      return (\n    //          <>\n    //          </>\n    //      )\n    //     } else {\n    //     return (\n    //         <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n    //     )\n    //     }\n    // }) \n    return (\n        <div className=\"mapInformation\">\n            <header>\n                <h2>Carpool <span>coordinator</span></h2>\n            </header> \n            <div className=\"nav\">\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/></Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/></Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/></Link>\n            </div> \n            <nav>\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/><br/>Home</Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/><br/>Map</Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/><br/>Assign</Link>\n            </nav>\n            {displayNames && (\n                <div className=\"allDrivers\">\n                    <div className=\"exit\" onClick={()=>{setDisplayNames(!displayNames)}}>X</div>\n                    <ul>\n                        {showAllDrivers}\n                    </ul>\n                </div>\n                )} \n            {/* <DriverForm coordinates={setDriverCoordinates}/>\n            <RideForm coordinates={setCoordinates} /> */}\n            {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/17/Ancient_Egypt_map-en.svg\" style={{ height: `92vh`, width: '100%' }}></img> */}\n            <GoogleMapReact\n            bootstrapURLKeys={{ key:'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y' }}\n            defaultCenter= {center}\n            defaultZoom={zoom}\n            options = {getMapOptions}\n            > \n                {pullDriverData}\n                {pullRideData}\n                {/* {createDriverMarkers}\n                {createRideMarkers} */}\n            </GoogleMapReact>\n        </div>\n    );\n}\n\n    export default SimpleMap"]},"metadata":{},"sourceType":"module"}