{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js\";\nimport React, { useState } from 'react';\nimport DriverMarker from \"./DriverMarker\";\nimport RideMarker from \"./RideMarker\";\nimport DriverForm from \"./DriverForm\";\nimport RideForm from \"./RideForm\";\nimport GoogleMapReact from 'google-map-react';\n\nconst SimpleMap = props => {\n  //setting state\n  const [centerC, setCenter] = useState({\n    lat: 37.4275,\n    lng: -122.1697\n  });\n  const [zoom, setZoom] = useState(11);\n  const [driverAddress, setDriverAddress] = useState([]);\n  const [rideAddress, setRideAddress] = useState([{}]);\n  const [currentPassenger, setCurrentPassenger] = useState(\"\");\n  const [displayNames, setDisplayNames] = useState(false);\n\n  const getMapOptions = () => {\n    return {\n      disableDefaultUI: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'on'\n        }]\n      }]\n    };\n  }; //assign to driver function\n\n\n  const assignToDriver = driverName => {\n    console.log(\"currentPassenger\", currentPassenger);\n    console.log(\"driverName\", driverName);\n    setDisplayNames(!displayNames);\n    props.assignToDriver(driverName, currentPassenger);\n  }; //make showAllDrivers div and function\n\n\n  const assignPass = passengerName => {\n    console.log(\"passengerName\", passengerName);\n    setCurrentPassenger(passengerName);\n    setDisplayNames(!displayNames);\n  };\n\n  const showAllDrivers = props.driverList.map((object, index) => {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => assignToDriver(object.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \" \", object.name, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plusSign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \" + \")));\n  }); //Pull in addresses from home and transfer into coordinates\n\n  const pullDriverData = props.driverCoordinates.map((object, index) => {\n    if (props.driverCoordinates.length > 0) {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        driverList: props.driverList[index],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }\n      });\n    }\n  });\n  const pullRideData = props.rideCoordinates.map((object, index) => {\n    if (props.rideCoordinates.length > 0) {\n      return /*#__PURE__*/React.createElement(RideMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        rideList: props.rideList[index],\n        assignPass: assignPass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      });\n    }\n  }); //setting coordinates\n\n  const setDriverCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    });\n    setDriverAddress([...driverAddress, {\n      lat: later,\n      lng: longer\n    }]);\n  };\n\n  const setCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    });\n    setRideAddress([...rideAddress, {\n      lat: later,\n      lng: longer\n    }]);\n    console.log(\"Ride Address\", rideAddress);\n  };\n\n  const createDriverMarkers = driverAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  const createRideMarkers = rideAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(RideMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, displayNames && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allDrivers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exit\",\n    onClick: () => {\n      setDisplayNames(!displayNames);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, showAllDrivers)), /*#__PURE__*/React.createElement(DriverForm, {\n    coordinates: setDriverCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RideForm, {\n    coordinates: setCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y'\n    },\n    center: centerC,\n    defaultZoom: zoom //   options = {getMapOptions}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, pullDriverData, pullRideData, createDriverMarkers, createRideMarkers));\n};\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js"],"names":["React","useState","DriverMarker","RideMarker","DriverForm","RideForm","GoogleMapReact","SimpleMap","props","centerC","setCenter","lat","lng","zoom","setZoom","driverAddress","setDriverAddress","rideAddress","setRideAddress","currentPassenger","setCurrentPassenger","displayNames","setDisplayNames","getMapOptions","disableDefaultUI","mapTypeControl","streetViewControl","styles","featureType","elementType","stylers","visibility","assignToDriver","driverName","console","log","assignPass","passengerName","showAllDrivers","driverList","map","object","index","name","pullDriverData","driverCoordinates","length","pullRideData","rideCoordinates","rideList","setDriverCoordinates","later","longer","setCoordinates","createDriverMarkers","Object","keys","createRideMarkers","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DriverMarker from \"./DriverMarker\"\nimport RideMarker from \"./RideMarker\"\nimport DriverForm from \"./DriverForm\"\nimport RideForm from \"./RideForm\"\nimport GoogleMapReact from 'google-map-react';\n\n\nconst SimpleMap = (props) => {\n    //setting state\n    const [centerC, setCenter] = useState({lat: 37.4275, lng: -122.1697});\n    const [zoom, setZoom] = useState(11);\n    const [driverAddress, setDriverAddress] = useState([])\n    const [rideAddress, setRideAddress] = useState([{}])\n    const [currentPassenger, setCurrentPassenger] = useState(\"\")\n    const [displayNames, setDisplayNames] = useState(false)\n  \n\n    const getMapOptions = () => {\n      return {\n        disableDefaultUI: true,\n        mapTypeControl: true,\n        streetViewControl: true,\n        styles: [{ featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'on' }] }],\n      };\n    };\n    \n    //assign to driver function\n    const assignToDriver = (driverName) => {\n        console.log(\"currentPassenger\", currentPassenger)\n        console.log(\"driverName\", driverName)\n        setDisplayNames(!displayNames)\n        props.assignToDriver(driverName, currentPassenger)\n\n    }\n    //make showAllDrivers div and function\n     const assignPass = (passengerName) => {\n        console.log(\"passengerName\", passengerName)\n        setCurrentPassenger(passengerName)\n        setDisplayNames(!displayNames)\n    }\n\n    const showAllDrivers = props.driverList.map((object, index) => {\n        return(\n            <a onClick={()=> assignToDriver(object.name)}>\n                <li> {object.name} \n                    <div className=\"plusSign\"> + </div> \n                </li>\n            </a>\n        )\n    })\n\n     \n    //Pull in addresses from home and transfer into coordinates\n    const pullDriverData = props.driverCoordinates.map((object, index)=> {\n        if(props.driverCoordinates.length >0){\n            return (\n                 <DriverMarker lat={object.lat} \n                               lng={object.lng} \n                               key={index} \n                               driverList={props.driverList[index]}/>\n                )\n            }   \n        })\n    const pullRideData = props.rideCoordinates.map((object, index)=> {\n        if(props.rideCoordinates.length >0){\n            return (\n                    <RideMarker lat={object.lat} \n                                lng={object.lng} \n                                key={index} \n                                rideList={props.rideList[index]}\n                                assignPass={assignPass}/>\n                )\n            }  \n        })\n\n\n    //setting coordinates\n    const setDriverCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        setDriverAddress([...driverAddress, {lat: later, lng: longer}])\n      } \n    const setCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        setRideAddress([...rideAddress, {lat: later, lng: longer}])\n        console.log(\"Ride Address\", rideAddress)\n      }\n\n    const createDriverMarkers = driverAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n\n             </>\n\n         )\n        } else {\n        return (\n            <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    })  \n    const createRideMarkers = rideAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n             </>\n         )\n        } else {\n        return (\n            <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    }) \n    return (\n        <div className=\"information\">\n            {displayNames && (\n                <div className=\"allDrivers\">\n                    <div className=\"exit\" onClick={()=>{setDisplayNames(!displayNames)}}>X</div>\n                    <ul>\n                        {showAllDrivers}\n                    </ul>\n                </div>\n                )} \n            <DriverForm coordinates={setDriverCoordinates}/>\n            <RideForm coordinates={setCoordinates} />\n            {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/17/Ancient_Egypt_map-en.svg\" style={{ height: `92vh`, width: '100%' }}></img> */}\n            <GoogleMapReact\n            bootstrapURLKeys={{ key:'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y' }}\n            center= {centerC}\n            defaultZoom={zoom}\n            //   options = {getMapOptions}\n            > \n                {pullDriverData}\n                {pullRideData}\n                {createDriverMarkers}\n                {createRideMarkers}\n            </GoogleMapReact>\n        </div>\n    );\n}\n\n    export default SimpleMap"]},"metadata":{},"sourceType":"module"}