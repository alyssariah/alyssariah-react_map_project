{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js\";\nimport React, { useState } from 'react';\nimport DriverMarker from \"./DriverMarker\";\nimport RideMarker from \"./RideMarker\";\nimport DriverForm from \"./DriverForm\";\nimport RideForm from \"./RideForm\";\nimport InfoWindow from \"./InfoWindow\";\nimport GoogleMapReact from 'google-map-react';\n\nconst SimpleMap = props => {\n  //setting state\n  const [centerC, setCenter] = useState({\n    lat: 37.4275,\n    lng: -122.1697\n  });\n  const [zoom, setZoom] = useState(11);\n  const [driverAddress, setDriverAddress] = useState([]);\n  const [rideAddress, setRideAddress] = useState([{}]);\n  const [show, setShow] = useState(false);\n\n  const getMapOptions = () => {\n    return {\n      disableDefaultUI: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'on'\n        }]\n      }]\n    };\n  };\n\n  const _onChildClick = () => {\n    console.log(\"I just got clicked\");\n    setShow(!show);\n  }; //Pull in addresses from home and transfer into coordinates\n\n\n  const pullDriverData = props.driverCoordinates.map((object, index) => {\n    if (props.driverCoordinates.length > 0) {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }\n      });\n    }\n  });\n  const pullRideData = props.rideCoordinates.map((object, index) => {\n    if (props.rideCoordinates.length > 0) {\n      if (show) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfoWindow, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(RideMarker, {\n          lat: object.lat,\n          lng: object.lng,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(RideMarker, {\n          lat: object.lat,\n          lng: object.lng,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        });\n      }\n    }\n  });\n\n  const setDriverCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    });\n    setDriverAddress([...driverAddress, {\n      lat: later,\n      lng: longer\n    }]);\n  };\n\n  const setCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    });\n    setRideAddress([...rideAddress, {\n      lat: later,\n      lng: longer\n    }]);\n    console.log(\"Ride Address\", rideAddress);\n  };\n\n  const createDriverMarkers = driverAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  const createRideMarkers = rideAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(RideMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DriverForm, {\n    coordinates: setDriverCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RideForm, {\n    coordinates: setCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y'\n    },\n    center: centerC,\n    defaultZoom: zoom,\n    onChildClick: _onChildClick //   options = {getMapOptions}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, pullDriverData, pullRideData, createDriverMarkers, createRideMarkers));\n};\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js"],"names":["React","useState","DriverMarker","RideMarker","DriverForm","RideForm","InfoWindow","GoogleMapReact","SimpleMap","props","centerC","setCenter","lat","lng","zoom","setZoom","driverAddress","setDriverAddress","rideAddress","setRideAddress","show","setShow","getMapOptions","disableDefaultUI","mapTypeControl","streetViewControl","styles","featureType","elementType","stylers","visibility","_onChildClick","console","log","pullDriverData","driverCoordinates","map","object","index","length","pullRideData","rideCoordinates","setDriverCoordinates","later","longer","setCoordinates","createDriverMarkers","Object","keys","createRideMarkers","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DriverMarker from \"./DriverMarker\"\nimport RideMarker from \"./RideMarker\"\nimport DriverForm from \"./DriverForm\"\nimport RideForm from \"./RideForm\"\nimport InfoWindow from \"./InfoWindow\"\nimport GoogleMapReact from 'google-map-react';\n\n\nconst SimpleMap = (props) => {\n    //setting state\n    const [centerC, setCenter] = useState({lat: 37.4275, lng: -122.1697});\n    const [zoom, setZoom] = useState(11);\n    const [driverAddress, setDriverAddress] = useState([])\n    const [rideAddress, setRideAddress] = useState([{}])\n    const [show, setShow] = useState(false)\n\n    const getMapOptions = () => {\n      return {\n        disableDefaultUI: true,\n        mapTypeControl: true,\n        streetViewControl: true,\n        styles: [{ featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'on' }] }],\n      };\n    };\n\n    const _onChildClick = () => {\n        console.log(\"I just got clicked\")\n        setShow(!show)\n    }\n     \n    //Pull in addresses from home and transfer into coordinates\n    const pullDriverData = props.driverCoordinates.map((object, index)=> {\n        if(props.driverCoordinates.length >0){\n            return (\n                 <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n                )\n            }   \n        })\n    const pullRideData = props.rideCoordinates.map((object, index)=> {\n        if(props.rideCoordinates.length >0){\n            if(show){\n                return (\n                    <>\n                    <InfoWindow />\n                    <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n                    </>\n                )\n            } else {\n                return (\n                        <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n                    )\n                } \n            }  \n        })\n\n    \n    const setDriverCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        setDriverAddress([...driverAddress, {lat: later, lng: longer}])\n      } \n    const setCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        setRideAddress([...rideAddress, {lat: later, lng: longer}])\n        console.log(\"Ride Address\", rideAddress)\n      }\n\n    const createDriverMarkers = driverAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n\n             </>\n\n         )\n        } else {\n        return (\n            <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    })  \n    const createRideMarkers = rideAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n             </>\n         )\n        } else {\n        return (\n            <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    }) \n    return (\n        <div className=\"information\">\n            <DriverForm coordinates={setDriverCoordinates}/>\n            <RideForm coordinates={setCoordinates} />\n            {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/17/Ancient_Egypt_map-en.svg\" style={{ height: `92vh`, width: '100%' }}></img> */}\n            <GoogleMapReact\n            bootstrapURLKeys={{ key:'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y' }}\n            center= {centerC}\n            defaultZoom={zoom}\n            onChildClick = {_onChildClick}\n            //   options = {getMapOptions}\n            > \n                {pullDriverData}\n                {pullRideData}\n                {createDriverMarkers}\n                {createRideMarkers}\n            </GoogleMapReact>\n        </div>\n    );\n}\n\n    export default SimpleMap"]},"metadata":{},"sourceType":"module"}