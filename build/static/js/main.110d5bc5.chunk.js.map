{"version":3,"sources":["Components/Form.js","Components/Home.js","Components/List.js","Components/ShowDrivers.js","Components/SimpleMap.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","driverName","setDriverName","driverAddress","setDriverAddress","rideName","setRideName","rideAddress","setRideAddress","displayDriverForm","setDisplayDriverForm","displayRideForm","setDisplayRideForm","passDriverInformation","e","a","preventDefault","str","replace","fetch","res","json","place","results","geometry","location","setDriverList","driverList","name","address","lat","lng","setDriverAlert","className","src","setShowDriveRemove","passRideInformation","setRideList","rideList","assign","setAlert","setShowRemove","onClick","showDriveRemove","driverAlert","makeDriverList","onSubmit","type","placeholder","onChange","target","value","required","showRemove","alert","makeRideList","Home","showInfo","setShowInfo","pullGoogleSheet","data","feed","entry","object","dataArr","map","obj","index","gsx$title","$t","gsx$name","gsx$address","title","driverArr","filter","driver","driverData","assigned","rideArr","ride","rideData","Promise","all","resolvedDriverArray","resolvedRideArray","forEach","splice","key","to","List","assignDriverList","placePassengers","ShowDrivers","plusStatus","setPlusStatus","useEffect","currentPassenger","i","length","resetPage","SimpleMap","center","setCurrentPassenger","displayNames","setDisplayNames","showAllDrivers","WrappedMap","withScriptjs","withGoogleMap","selectDriver","setSelectDriver","selectRide","setSelectRide","defaultZoom","defaultCenter","position","icon","url","scaledSize","window","google","maps","Size","onCloseClick","href","googleMapURL","loadingElement","style","height","containerElement","mapElement","App","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.110d5bc5.chunk.js","sourcesContent":["import React, {useState} from \"react\"\n\nfunction Form(props){\n    const [driverName, setDriverName] = useState(\"\")\n    const [driverAddress, setDriverAddress] = useState(\"\")\n    const [rideName, setRideName] = useState(\"\")\n    const [rideAddress, setRideAddress] = useState(\"\")\n    const [displayDriverForm, setDisplayDriverForm] = useState(false)\n    const [displayRideForm, setDisplayRideForm] = useState(false)\n\n    //handleChange function to take in input \n    const handleDriverName =(e) => {\n        setDriverName(e.target.value)\n    }\n    const handleDriverAddress =(e) => {\n        setDriverAddress(e.target.value)\n    }\n    const handleRideName =(e) => {\n        setRideName(e.target.value)\n    }\n    const handleRideAddress =(e) => {\n        setRideAddress(e.target.value)\n    }\n\n    //change Address into coordinates and pass to SimpleMap\n    const passDriverInformation = async(e) =>{\n        e.preventDefault()\n        let str = driverAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setDriverList([...props.driverList, {name: driverName, address: driverAddress, lat: place.lat, lng: place.lng}])\n        props.setDriverAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {driverName} has been added to your map!</div>)\n        setDriverName(\"\")\n        setDriverAddress(\"\")\n        setDisplayDriverForm(false)\n        props.setShowDriveRemove(false)\n    }\n    const passRideInformation = async(e) =>{\n        e.preventDefault()\n        let str = rideAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setRideList([...props.rideList, {name: rideName, address: rideAddress, lat: place.lat, lng: place.lng, assign:\"unassigned\"}])\n        props.setAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {rideName} has been added to your map!</div>)\n        setRideName(\"\")\n        setRideAddress(\"\")\n        setDisplayRideForm(false)\n        props.setShowRemove(false)\n    }\n\n    return(\n        <div className=\"allLists\">\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Driver List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayDriverForm(!displayDriverForm)\n                                                            props.setShowDriveRemove(!props.showDriveRemove)}} \n                         src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div>\n                {props.driverAlert} \n                <ul>\n                    {props.makeDriverList}\n                </ul>\n                {displayDriverForm && (<form onSubmit={passDriverInformation}>\n                    <input className=\"formName\"\n                        type=\"text\" \n                        placeholder=\"Driver name\" \n                        onChange={handleDriverName} \n                        value={driverName}\n                        required=\"required\"/>\n                    <input className=\"formAddress\"\n                        type=\"text\" \n                        placeholder=\"Driver address\" \n                        onChange={handleDriverAddress} \n                        value={driverAddress}\n                        required=\"required\"/>\n                    <button>Add</button>   \n                </form>)}    \n            </div>\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Passenger List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayRideForm(!displayRideForm); props.setShowRemove(!props.showRemove)}} src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div> \n                {props.alert}  \n                <ul>\n                    {props.makeRideList}\n                </ul> \n                {displayRideForm && (<form onSubmit={passRideInformation}>\n                <input className=\"formName\"\n                    type=\"text\" \n                    placeholder=\"Passenger name\" \n                    onChange={handleRideName} \n                    value={rideName}\n                    required=\"required\"/>\n                <input className=\"formAddress\"\n                    type=\"text\" \n                    placeholder=\"Passenger address\" \n                    onChange={handleRideAddress} \n                    value={rideAddress}\n                    required=\"required\"/>\n                <button>Add</button>  \n                </form>)}  \n            </div>\n        </div>    \n    )\n}\nexport default Form;","import React, {useState, useEffect} from \"react\"\nimport {Link} from \"react-router-dom\"\nimport \"./CSS/Home.css\"\nimport Form from \"./Form\"\n\nfunction Home(props){\n    //setting state\n    const [driverAlert, setDriverAlert] = useState(\"\")\n    const [alert, setAlert] = useState(\"\")\n    const [showInfo, setShowInfo] = useState(false)\n    const [showRemove, setShowRemove] = useState(false)\n    const [showDriveRemove, setShowDriveRemove] = useState(false)\n\n    //fetching data from google sheet\n    const pullGoogleSheet = async() => {\n        let sheetUrl = \"https://spreadsheets.google.com/feeds/list/1uZdRKonnGEAgksvHTd9g6FKBkiQyzk9vf6u2ec7LEdE/od6/public/values?alt=json\"\n        let res = await fetch(sheetUrl)\n        let data = await res.json()\n        let object = await data.feed.entry\n        const dataArr = object.map((obj, index) => {\n            if(obj.gsx$title.$t === \"Driver\"){\n                return {name: obj.gsx$name.$t, address: obj.gsx$address.$t, title: \"driver\"}\n              \n            } else {\n                return {name: obj.gsx$name.$t, address: obj.gsx$address.$t, title: \"passenger\"}\n            }\n        })\n        const driverArr = dataArr.filter((driver)=>{\n            return driver.title === \"driver\"\n        })\n        const driverData = driverArr.map(async(driver, index)=>{\n            let str = driver.address.replace(/\\s/g, '+');\n            let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n            let json = await res.json();\n            let place = json.results[0].geometry.location\n            return {name: driver.name, address: driver.address, lat: place.lat, lng: place.lng, assigned:\"unassigned\"}\n        })\n        const rideArr = dataArr.filter((ride)=>{\n            return ride.title === \"passenger\"\n        })\n        const rideData = rideArr.map(async(ride, index)=>{\n            let str = ride.address.replace(/\\s/g, '+');\n            let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n            let json = await res.json();\n            let place = json.results[0].geometry.location\n            return {name: ride.name, address: ride.address, lat: place.lat, lng: place.lng, assign: \"unassigned\"}\n        })\n        const resolvedDriverArray = await Promise.all(driverData); \n        const resolvedRideArray = await Promise.all(rideData)\n       \n        props.setDriverList(resolvedDriverArray)\n        props.setRideList(resolvedRideArray)\n    }\n    \n    //removing item from list \n    const removeDriver = (name) => {\n        props.driverList.forEach((object, index) => {\n            if(name === object.name){\n                props.driverList.splice(index, 1)\n                setDriverAlert(\n                    <div className=\"alert\">\n                        <img className=\"removeIcon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Remove_sign_font_awesome.svg/512px-Remove_sign_font_awesome.svg.png\"/>\n                        <p>{name} has been removed from your map</p>\n                     </div>\n                )\n            }\n        })\n    }\n    const removeRide = (name) => {\n        props.rideList.forEach((object, index) => {\n            if(name === object.name){\n                props.rideList.splice(index, 1)\n                setAlert(\n                    <div className=\"alert\">\n                        <img className=\"removeIcon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Remove_sign_font_awesome.svg/512px-Remove_sign_font_awesome.svg.png\"/>\n                        <p>{name} has been removed from your map</p>\n                    </div>)\n            }\n        })\n\n    }\n\n    \n    //making the driver List and ride List\n    const makeDriverList = props.driverList.map((obj, index) => {\n        return (\n            <div className=\"listItem\">\n                {showDriveRemove && (<img className=\"removeIcon\" onClick ={()=> removeDriver(obj.name)} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Remove_sign_font_awesome.svg/512px-Remove_sign_font_awesome.svg.png\"/>)}\n                <li key={index}>{obj.name} - {obj.address}</li>\n            </div>\n        )\n    })\n    const makeRideList = props.rideList.map((obj, index) => {\n        return (\n            <div className=\"listItem\">\n                {showRemove && (<img className=\"removeIcon\" onClick={()=> removeRide(obj.name)} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Remove_sign_font_awesome.svg/512px-Remove_sign_font_awesome.svg.png\"/>)}\n                <li key={index}>{obj.name} - {obj.address}</li>\n            </div>\n        )\n    })\n\n    return(\n        <div className=\"information\">\n            <header>\n                <h2>Carpool <span>coordinator</span></h2>\n                <div>\n                <img onClick={pullGoogleSheet} className=\"importIcon\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/4d/Font_Awesome_5_solid_file-import.svg\"/>\n                <img onClick={()=>{setShowInfo(!showInfo)}}className=\"helpIcon\" src=\"https://cdn1.iconfinder.com/data/icons/education-set-4/512/information-512.png\"/>\n                </div>\n            </header> \n            <div className=\"nav\">\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/></Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/></Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/></Link>\n            </div> \n            <nav>\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/><br/>Home</Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/><br/>Map</Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/><br/>Assign</Link>\n            </nav>  \n            {showInfo && (<div className=\"instructions\" onClick={()=> setShowInfo(false)}>\n                <ol>\n                <h4>Instructions: </h4>\n                    <li>On your home page, add drivers to your driver list and passengers who need a ride to your passenger list</li>\n                    <li>After you submit, check out the map by clicking on the map icon to see where your drivers and passengers are located!\n                    </li>\n                    <li>On the map page, click on the red passenger markers to assign them a driver and they should turn blue!</li>\n                    <li>Once you assigned all your passengers a driver and your markers are all blue, click on the list icon to see the assignments</li>\n                </ol>\n            </div>)}\n            <main>\n            <div className=\"welcome\">\n                    <h4>A better way to coordinate rides!</h4>\n            </div>\n            <Form makeDriverList={makeDriverList}\n                 makeRideList={makeRideList}\n                 driverList={props.driverList}\n                 setDriverList={props.setDriverList}\n                 rideList={props.rideList}\n                 setRideList={props.setRideList}\n                 alert={alert}\n                 setAlert={setAlert}\n                 driverAlert={driverAlert}\n                 setDriverAlert={setDriverAlert}\n                 setShowDriveRemove={setShowDriveRemove}\n                 showDriveRemove={showDriveRemove}\n                 showRemove={showRemove}\n                 setShowRemove={setShowRemove}/>\n            </main>          \n            <footer>&copy; Carpool Coordinator 2020</footer>\n        </div>\n    )\n}\nexport default Home;","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport \"./CSS/List.css\"\n\nfunction List(props){\n    \n    const assignDriverList = props.driverList.map((obj, index) => {\n        const placePassengers = props.rideList.map((object, index) => {\n            if(object.assign === obj.name){\n                return (\n                    <li key={index}>{object.name} - {object.address}</li>\n                )\n            }\n        })\n        return (\n            <div className=\"fullList\" key={index}>\n                <h4>{obj.name}</h4>\n                <ul>\n                    {placePassengers}\n                </ul>\n            </div>\n        )\n    })\n    \n    return(\n        <div className=\"listInformation\">\n            <div className=\"nav\">\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/></Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/></Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/></Link>\n            </div> \n            <nav>\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/><br/>Home</Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/><br/>Map</Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/><br/>Assign</Link>\n            </nav>\n            <div className=\"list\">\n                <h2 className=\"assig\">Driver Assignments</h2>\n                <div className=\"assign\">\n                    {assignDriverList}\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default List","import React, {useState, useEffect} from \"react\"\n\nfunction ShowDrivers(props){\n    const [plusStatus, setPlusStatus] = useState(true)\n    \n    useEffect (()=>{\n        if(props.currentPassenger.assign === props.object.name){\n            setPlusStatus(false)\n        }\n    }, []) \n\n    const _onClick = () => {\n        if(plusStatus === true){\n            for(let i= 0; i< props.rideList.length; i++){\n                if(props.currentPassenger === props.rideList[i]){\n                    props.rideList[i].assign = props.object.name;\n                }\n            } \n            props.resetPage() \n            setPlusStatus(false)\n        } else {\n            for(let i= 0; i< props.rideList.length; i++){\n                if(props.currentPassenger === props.rideList[i]){\n                    props.rideList[i].assign = \"unassigned\";\n                }\n            } \n            props.resetPage()\n            setPlusStatus(true)\n        }    \n    }\n    return(\n        <a onClick={_onClick}>\n            <li className=\"currentDriver\"> \n                {props.object.name} \n                <div className=\"plusSign\">  \n                {plusStatus ? \"+\": \"-\"}\n                </div>\n            </li>\n        </a>\n     \n    )\n}\n\nexport default ShowDrivers;","import React, { useState } from 'react';\nimport \"./CSS/SimpleMap.css\"\nimport {Link} from \"react-router-dom\"\nimport ShowDrivers from \"./ShowDrivers\"\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from \"react-google-maps\"\n\n\nconst SimpleMap = (props) => {\n    //setting state\n    const [center, setCenter] = useState({lat: 37.4275, lng: -122.169});\n    const [currentPassenger, setCurrentPassenger] = useState(\"\")\n    const [displayNames, setDisplayNames] = useState(false)\n\n    \n    //assign page to reset\n    const resetPage = (driverName) => {\n        setDisplayNames(!displayNames)\n    }\n \n    //showAllDrivers div and function\n    const assignPass = (passenger) => {\n        setCurrentPassenger(passenger)\n        setDisplayNames(!props.displayNames)\n    }\n    const showAllDrivers = props.driverList.map((object, index) => {\n        return(\n            <ShowDrivers object={object} \n                         resetPage={resetPage}\n                         rideList={props.rideList}\n                         currentPassenger = {currentPassenger}/>    \n        )\n    })\n\n    function Map() {\n        const [selectDriver, setSelectDriver] = useState(null);\n        const [selectRide, setSelectRide] = useState(null)\n        return(\n        <GoogleMap\n            defaultZoom={11}\n            defaultCenter={props.driverList.length > 0 ? {lat: props.driverList[0].lat, lng: props.driverList[0].lng}: center}>\n            \n            {props.driverList.map((object, index)=> {\n                if(props.driverList.length >0){\n                    return (\n                        <Marker position={{lat: object.lat, lng: object.lng}} key={index} \n                                onClick={()=>{setSelectDriver(object)}}\n                                icon={{ url: \"https://storage.needpix.com/rsynced_images/icon-2070748_1280.png\", scaledSize: new window.google.maps.Size(35, 50)}}/>           \n                    )\n                }   \n                })\n            }\n            {selectDriver && (\n                <InfoWindow position={{lat: (selectDriver.lat), lng: selectDriver.lng}} onCloseClick= {()=> setSelectDriver(null)}>\n                    <div> <p><span>{selectDriver.name}</span><br/>{selectDriver.address}</p></div>   \n                </InfoWindow>\n            )} \n            {props.rideList.map((object, index)=> {\n                if(props.rideList.length >0){\n                    return (\n                        <Marker position={{lat: object.lat, lng: object.lng}}\n                                onClick={()=> {setSelectRide(object)}}\n                                key={index} \n                                icon={object.assign != \"unassigned\" ? {url:\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\", scaledSize: new window.google.maps.Size(50, 50)} : {url:\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n                                scaledSize: new window.google.maps.Size(50, 50)}} />\n                    )\n                }  \n            })\n            }\n            {selectRide && (\n                <InfoWindow position={{lat: (selectRide.lat), lng: selectRide.lng}} onCloseClick= {()=> setSelectRide(null)}>\n                    <div> \n                        <p><span>{selectRide.name}</span><br/>{selectRide.address}</p>\n                        <hr/>\n                        <div onClick={()=> assignPass(selectRide)}>\n                            <h5>Driver: <a href=\"#\">{selectRide.assign}</a></h5>\n                        </div>\n                    </div>\n                </InfoWindow>\n            )} \n        </GoogleMap>\n        )\n    }\n    \n    const WrappedMap =  withScriptjs(withGoogleMap(Map));    \n\n    return (\n        <div className=\"mapInformation\">\n            <header>\n                <h2>Carpool <span>coordinator</span></h2>\n            </header> \n            <div className=\"nav\">\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/></Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/></Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/></Link>\n            </div> \n            <nav>\n                <Link to=\"/\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Home_icon_black.png\"/><br/>Home</Link>\n                <Link to=\"/map\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ed/Map_pin_icon.svg\"/><br/>Map</Link>\n                <Link to=\"/list\"><img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/4/43/Noun_project_list_icon_1380018_cc.svg\"/><br/>Assign</Link>\n            </nav>\n            {displayNames && (\n                <div className=\"allDrivers\">\n                    <div className=\"exit\" onClick={()=>{setDisplayNames(!displayNames)}}>X</div>\n                    <ul>\n                        {showAllDrivers}\n                    </ul>\n                </div>\n                )} \n            <WrappedMap\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y\"\n                loadingElement= {<div style={{ height: `100%` }}/>}\n                containerElement= {<div style={{ height: `100%` }} />}\n                mapElement= {<div style={{ height: `100%` }}\n                driverList={props.driverList} />}\n            />\n        </div>\n    );\n}\n\n    export default SimpleMap","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Home from \"./Components/Home\"\nimport List from \"./Components/List\"\nimport SimpleMap from \"./Components/SimpleMap\"\nimport {Switch, Route, Link, Redirect} from \"react-router-dom\"\n\nfunction App() {\n  //setting state to pass down\n  const [driverList, setDriverList] = useState([])\n  const [rideList, setRideList] = useState([])\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={()=> <Home setDriverList={setDriverList}\n                                                 driverList={driverList}\n                                                 setRideList={setRideList}\n                                                 rideList={rideList}/>}/>\n        <Route path=\"/map\"  render={()=> <SimpleMap driverList={driverList} \n                                                    rideList ={rideList}/>}/>\n        <Route path=\"/list\" render={()=> <List driverList={driverList} \n                                               rideList={rideList} />}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}