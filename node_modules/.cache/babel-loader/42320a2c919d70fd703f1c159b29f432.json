{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/Form.js\";\nimport React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [driverName, setDriverName] = useState(\"\");\n  const [driverAddress, setDriverAddress] = useState(\"\");\n  const [rideName, setRideName] = useState(\"\");\n  const [rideAddress, setRideAddress] = useState(\"\");\n  const [displayDriverForm, setDisplayDriverForm] = useState(false);\n  const [displayRideForm, setDisplayRideForm] = useState(false); //handleChange function to take in input \n\n  const handleDriverName = e => {\n    setDriverName(e.target.value);\n  };\n\n  const handleDriverAddress = e => {\n    setDriverAddress(e.target.value);\n  };\n\n  const handleRideName = e => {\n    setRideName(e.target.value);\n  };\n\n  const handleRideAddress = e => {\n    setRideAddress(e.target.value);\n  }; //change Address into coordinates and pass to SimpleMap\n\n\n  const passDriverInformation = async e => {\n    e.preventDefault();\n    let str = driverAddress.replace(/\\s/g, '+');\n    let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`);\n    let json = await res.json();\n    let place = json.results[0].geometry.location;\n    props.setDriverList([...props.driverList, {\n      name: driverName,\n      address: driverAddress,\n      lat: place.lat,\n      lng: place.lng\n    }]);\n    props.setDriverAlert( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"checkMark\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), driverName, \" has been added to your map!\"));\n    setDriverName(\"\");\n    setDriverAddress(\"\");\n    setDisplayDriverForm(false);\n    props.setShowDriveRemove(false);\n  };\n\n  const passRideInformation = async e => {\n    e.preventDefault();\n    let str = rideAddress.replace(/\\s/g, '+');\n    let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`);\n    let json = await res.json();\n    let place = json.results[0].geometry.location;\n    props.setRideList([...props.rideList, {\n      name: rideName,\n      address: rideAddress,\n      lat: place.lat,\n      lng: place.lng,\n      assign: \"unassigned\"\n    }]);\n    props.setAlert( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"checkMark\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), rideName, \" has been added to your map!\"));\n    setRideName(\"\");\n    setRideAddress(\"\");\n    setDisplayRideForm(false);\n    props.setShowRemove(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allLists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Driver List\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"addPerson\",\n    onClick: () => {\n      setDisplayDriverForm(!displayDriverForm);\n      props.setShowDriveRemove(!props.showDriveRemove);\n    },\n    src: \"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), props.driverAlert, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, props.makeDriverList), displayDriverForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: passDriverInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formName\",\n    type: \"text\",\n    placeholder: \"Driver name\",\n    onChange: handleDriverName,\n    value: driverName,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formAddress\",\n    type: \"text\",\n    placeholder: \"Driver address\",\n    onChange: handleDriverAddress,\n    value: driverAddress,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Passenger List\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"addPerson\",\n    onClick: () => {\n      setDisplayRideForm(!displayRideForm);\n      props.setShowRemove(!props.showRemove);\n    },\n    src: \"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), props.alert, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, props.makeRideList), displayRideForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: passRideInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formName\",\n    type: \"text\",\n    placeholder: \"Passenger name\",\n    onChange: handleRideName,\n    value: rideName,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formAddress\",\n    type: \"text\",\n    placeholder: \"Passenger address\",\n    onChange: handleRideAddress,\n    value: rideAddress,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Add\"))));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/Form.js"],"names":["React","useState","Form","props","driverName","setDriverName","driverAddress","setDriverAddress","rideName","setRideName","rideAddress","setRideAddress","displayDriverForm","setDisplayDriverForm","displayRideForm","setDisplayRideForm","handleDriverName","e","target","value","handleDriverAddress","handleRideName","handleRideAddress","passDriverInformation","preventDefault","str","replace","res","fetch","json","place","results","geometry","location","setDriverList","driverList","name","address","lat","lng","setDriverAlert","setShowDriveRemove","passRideInformation","setRideList","rideList","assign","setAlert","setShowRemove","showDriveRemove","driverAlert","makeDriverList","showRemove","alert","makeRideList"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\n\nfunction Form(props){\n    const [driverName, setDriverName] = useState(\"\")\n    const [driverAddress, setDriverAddress] = useState(\"\")\n    const [rideName, setRideName] = useState(\"\")\n    const [rideAddress, setRideAddress] = useState(\"\")\n    const [displayDriverForm, setDisplayDriverForm] = useState(false)\n    const [displayRideForm, setDisplayRideForm] = useState(false)\n\n    //handleChange function to take in input \n    const handleDriverName =(e) => {\n        setDriverName(e.target.value)\n    }\n    const handleDriverAddress =(e) => {\n        setDriverAddress(e.target.value)\n    }\n    const handleRideName =(e) => {\n        setRideName(e.target.value)\n    }\n    const handleRideAddress =(e) => {\n        setRideAddress(e.target.value)\n    }\n\n    //change Address into coordinates and pass to SimpleMap\n    const passDriverInformation = async(e) =>{\n        e.preventDefault()\n        let str = driverAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setDriverList([...props.driverList, {name: driverName, address: driverAddress, lat: place.lat, lng: place.lng}])\n        props.setDriverAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {driverName} has been added to your map!</div>)\n        setDriverName(\"\")\n        setDriverAddress(\"\")\n        setDisplayDriverForm(false)\n        props.setShowDriveRemove(false)\n    }\n    const passRideInformation = async(e) =>{\n        e.preventDefault()\n        let str = rideAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setRideList([...props.rideList, {name: rideName, address: rideAddress, lat: place.lat, lng: place.lng, assign:\"unassigned\"}])\n        props.setAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {rideName} has been added to your map!</div>)\n        setRideName(\"\")\n        setRideAddress(\"\")\n        setDisplayRideForm(false)\n        props.setShowRemove(false)\n    }\n\n    return(\n        <div className=\"allLists\">\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Driver List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayDriverForm(!displayDriverForm)\n                                                            props.setShowDriveRemove(!props.showDriveRemove)}} \n                         src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div>\n                {props.driverAlert} \n                <ul>\n                    {props.makeDriverList}\n                </ul>\n                {displayDriverForm && (<form onSubmit={passDriverInformation}>\n                    <input className=\"formName\"\n                        type=\"text\" \n                        placeholder=\"Driver name\" \n                        onChange={handleDriverName} \n                        value={driverName}\n                        required=\"required\"/>\n                    <input className=\"formAddress\"\n                        type=\"text\" \n                        placeholder=\"Driver address\" \n                        onChange={handleDriverAddress} \n                        value={driverAddress}\n                        required=\"required\"/>\n                    <button>Add</button>   \n                </form>)}    \n            </div>\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Passenger List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayRideForm(!displayRideForm); props.setShowRemove(!props.showRemove)}} src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div> \n                {props.alert}  \n                <ul>\n                    {props.makeRideList}\n                </ul> \n                {displayRideForm && (<form onSubmit={passRideInformation}>\n                <input className=\"formName\"\n                    type=\"text\" \n                    placeholder=\"Passenger name\" \n                    onChange={handleRideName} \n                    value={rideName}\n                    required=\"required\"/>\n                <input className=\"formAddress\"\n                    type=\"text\" \n                    placeholder=\"Passenger address\" \n                    onChange={handleRideAddress} \n                    value={rideAddress}\n                    required=\"required\"/>\n                <button>Add</button>  \n                </form>)}  \n            </div>\n        </div>    \n    )\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}