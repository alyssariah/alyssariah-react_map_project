{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { DataContext } from \"./Home\";\n\nfunction Form(props) {\n  const [driverName, setDriverName] = useState(\"\");\n  const [driverAddress, setDriverAddress] = useState(\"\");\n  const [rideName, setRideName] = useState(\"\");\n  const [rideAddress, setRideAddress] = useState(\"\");\n  const [displayDriverForm, setDisplayDriverForm] = useState(false);\n  const [displayRideForm, setDisplayRideForm] = useState(false);\n  useEffect(() => {\n    if (props.driverList.length === 0) {\n      setDisplayDriverForm(true);\n    }\n\n    if (props.rideList.length === 0) {\n      setDisplayRideForm(true);\n    }\n  }, []);\n  const dataContext = useContext(DataContext); //handleChange function to take in input \n\n  const handleDriverName = e => {\n    setDriverName(e.target.value);\n  };\n\n  const handleDriverAddress = e => {\n    setDriverAddress(e.target.value);\n  };\n\n  const handleRideName = e => {\n    setRideName(e.target.value);\n  };\n\n  const handleRideAddress = e => {\n    setRideAddress(e.target.value);\n  }; //change Address into coordinates and pass to SimpleMap\n\n\n  const passDriverInformation = async e => {\n    e.preventDefault();\n    let str = driverAddress.replace(/\\s/g, '+');\n    let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`);\n    let json = await res.json();\n    let place = json.results[0].geometry.location;\n    props.setDriverList([...props.driverList, {\n      name: driverName,\n      address: driverAddress,\n      lat: place.lat,\n      lng: place.lng\n    }]);\n    props.setDriverAlert( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"checkMark\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), driverName, \" has been added to your map!\"));\n    setDriverName(\"\");\n    setDriverAddress(\"\");\n    setDisplayDriverForm(false);\n    props.setShowDriveRemove(false);\n  };\n\n  const passRideInformation = async e => {\n    e.preventDefault();\n    let str = rideAddress.replace(/\\s/g, '+');\n    let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`);\n    let json = await res.json();\n    let place = json.results[0].geometry.location;\n    props.setRideList([...props.rideList, {\n      name: rideName,\n      address: rideAddress,\n      lat: place.lat,\n      lng: place.lng,\n      assign: \"unassigned\"\n    }]);\n    props.setAlert( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"checkMark\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), rideName, \" has been added to your map!\"));\n    setRideName(\"\");\n    setRideAddress(\"\");\n    setDisplayRideForm(false);\n    props.setShowRemove(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allLists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Driver List\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"addPerson\",\n    onClick: () => {\n      setDisplayDriverForm(!displayDriverForm);\n    },\n    src: \"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), dataContext.driverAlert, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, props.makeDriverList), displayDriverForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: passDriverInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formName\",\n    type: \"text\",\n    placeholder: \"Driver name\",\n    onChange: handleDriverName,\n    value: driverName,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formAddress\",\n    type: \"text\",\n    placeholder: \"Driver address\",\n    onChange: handleDriverAddress,\n    value: driverAddress,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homeForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Passenger List\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"addPerson\",\n    onClick: () => {\n      setDisplayRideForm(!displayRideForm);\n    },\n    src: \"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), props.alert, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, props.makeRideList), displayRideForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: passRideInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formName\",\n    type: \"text\",\n    placeholder: \"Passenger name\",\n    onChange: handleRideName,\n    value: rideName,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"formAddress\",\n    type: \"text\",\n    placeholder: \"Passenger address\",\n    onChange: handleRideAddress,\n    value: rideAddress,\n    required: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Add\"))));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/Form.js"],"names":["React","useState","useEffect","DataContext","Form","props","driverName","setDriverName","driverAddress","setDriverAddress","rideName","setRideName","rideAddress","setRideAddress","displayDriverForm","setDisplayDriverForm","displayRideForm","setDisplayRideForm","driverList","length","rideList","dataContext","useContext","handleDriverName","e","target","value","handleDriverAddress","handleRideName","handleRideAddress","passDriverInformation","preventDefault","str","replace","res","fetch","json","place","results","geometry","location","setDriverList","name","address","lat","lng","setDriverAlert","setShowDriveRemove","passRideInformation","setRideList","assign","setAlert","setShowRemove","driverAlert","makeDriverList","alert","makeRideList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGG,KAAK,CAACa,UAAN,CAAiBC,MAAjB,KAA0B,CAA7B,EAA+B;AAC3BJ,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH;;AACD,QAAGV,KAAK,CAACe,QAAN,CAAeD,MAAf,KAA0B,CAA7B,EAA+B;AAC3BF,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AASA,QAAMI,WAAW,GAAGC,UAAU,CAACnB,WAAD,CAA9B,CAjBgB,CAkBhB;;AACA,QAAMoB,gBAAgB,GAAGC,CAAD,IAAO;AAC3BjB,IAAAA,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAGA,QAAMC,mBAAmB,GAAGH,CAAD,IAAO;AAC9Bf,IAAAA,gBAAgB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACH,GAFD;;AAGA,QAAME,cAAc,GAAGJ,CAAD,IAAO;AACzBb,IAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAGA,QAAMG,iBAAiB,GAAGL,CAAD,IAAO;AAC5BX,IAAAA,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD,CA5BgB,CAgChB;;;AACA,QAAMI,qBAAqB,GAAG,MAAMN,CAAN,IAAW;AACrCA,IAAAA,CAAC,CAACO,cAAF;AACA,QAAIC,GAAG,GAAGxB,aAAa,CAACyB,OAAd,CAAsB,KAAtB,EAA6B,GAA7B,CAAV;AACA,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,6DAA4DH,GAAI,kDAAlE,CAArB;AACA,QAAII,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAjB;AACA,QAAIC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,QAArC;AACAnC,IAAAA,KAAK,CAACoC,aAAN,CAAoB,CAAC,GAAGpC,KAAK,CAACa,UAAV,EAAsB;AAACwB,MAAAA,IAAI,EAAEpC,UAAP;AAAmBqC,MAAAA,OAAO,EAAEnC,aAA5B;AAA2CoC,MAAAA,GAAG,EAAEP,KAAK,CAACO,GAAtD;AAA2DC,MAAAA,GAAG,EAAER,KAAK,CAACQ;AAAtE,KAAtB,CAApB;AACAxC,IAAAA,KAAK,CAACyC,cAAN,eAAqB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACjB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAC,2EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,EAEhBxC,UAFgB,iCAArB;AAGAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAM,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAV,IAAAA,KAAK,CAAC0C,kBAAN,CAAyB,KAAzB;AACH,GAdD;;AAeA,QAAMC,mBAAmB,GAAG,MAAMxB,CAAN,IAAW;AACnCA,IAAAA,CAAC,CAACO,cAAF;AACA,QAAIC,GAAG,GAAGpB,WAAW,CAACqB,OAAZ,CAAoB,KAApB,EAA2B,GAA3B,CAAV;AACA,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,6DAA4DH,GAAI,kDAAlE,CAArB;AACA,QAAII,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAjB;AACA,QAAIC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,QAAhB,CAAyBC,QAArC;AACAnC,IAAAA,KAAK,CAAC4C,WAAN,CAAkB,CAAC,GAAG5C,KAAK,CAACe,QAAV,EAAoB;AAACsB,MAAAA,IAAI,EAAEhC,QAAP;AAAiBiC,MAAAA,OAAO,EAAE/B,WAA1B;AAAuCgC,MAAAA,GAAG,EAAEP,KAAK,CAACO,GAAlD;AAAuDC,MAAAA,GAAG,EAAER,KAAK,CAACQ,GAAlE;AAAuEK,MAAAA,MAAM,EAAC;AAA9E,KAApB,CAAlB;AACA7C,IAAAA,KAAK,CAAC8C,QAAN,eAAe;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACX;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAC,2EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,EAEVzC,QAFU,iCAAf;AAGAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAZ,IAAAA,KAAK,CAAC+C,aAAN,CAAoB,KAApB;AACH,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAI;AAACrC,MAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AAAyC,KAAlF;AACK,IAAA,GAAG,EAAC,kEADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMKO,WAAW,CAACgC,WANjB,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhD,KAAK,CAACiD,cADX,CAPJ,EAUKxC,iBAAiB,iBAAK;AAAM,IAAA,QAAQ,EAAEgB,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACnB;AAAO,IAAA,SAAS,EAAC,UAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,QAAQ,EAAEP,gBAHd;AAII,IAAA,KAAK,EAAEjB,UAJX;AAKI,IAAA,QAAQ,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,eAOnB;AAAO,IAAA,SAAS,EAAC,aAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,QAAQ,EAAEqB,mBAHd;AAII,IAAA,KAAK,EAAEnB,aAJX;AAKI,IAAA,QAAQ,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPmB,eAanB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbmB,CAV3B,CADJ,eA2BI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAI;AAACS,MAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AAAqC,KAA9E;AAAgF,IAAA,GAAG,EAAC,kEAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKKX,KAAK,CAACkD,KALX,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlD,KAAK,CAACmD,YADX,CANJ,EASKxC,eAAe,iBAAK;AAAM,IAAA,QAAQ,EAAEgC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACrB;AAAO,IAAA,SAAS,EAAC,UAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,QAAQ,EAAEpB,cAHd;AAII,IAAA,KAAK,EAAElB,QAJX;AAKI,IAAA,QAAQ,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADqB,eAOrB;AAAO,IAAA,SAAS,EAAC,aAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,mBAFhB;AAGI,IAAA,QAAQ,EAAEmB,iBAHd;AAII,IAAA,KAAK,EAAEjB,WAJX;AAKI,IAAA,QAAQ,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPqB,eAarB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbqB,CATzB,CA3BJ,CADJ;AAuDH;;AACD,eAAeR,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {DataContext} from \"./Home\"\n\nfunction Form(props){\n    const [driverName, setDriverName] = useState(\"\")\n    const [driverAddress, setDriverAddress] = useState(\"\")\n    const [rideName, setRideName] = useState(\"\")\n    const [rideAddress, setRideAddress] = useState(\"\")\n    const [displayDriverForm, setDisplayDriverForm] = useState(false)\n    const [displayRideForm, setDisplayRideForm] = useState(false)\n\n    useEffect(()=>{\n        if(props.driverList.length===0){\n            setDisplayDriverForm(true)\n        }\n        if(props.rideList.length === 0){\n            setDisplayRideForm(true)\n        }\n    }, [])\n\n    const dataContext = useContext(DataContext);\n    //handleChange function to take in input \n    const handleDriverName =(e) => {\n        setDriverName(e.target.value)\n    }\n    const handleDriverAddress =(e) => {\n        setDriverAddress(e.target.value)\n    }\n    const handleRideName =(e) => {\n        setRideName(e.target.value)\n    }\n    const handleRideAddress =(e) => {\n        setRideAddress(e.target.value)\n    }\n\n    //change Address into coordinates and pass to SimpleMap\n    const passDriverInformation = async(e) =>{\n        e.preventDefault()\n        let str = driverAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setDriverList([...props.driverList, {name: driverName, address: driverAddress, lat: place.lat, lng: place.lng}])\n        props.setDriverAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {driverName} has been added to your map!</div>)\n        setDriverName(\"\")\n        setDriverAddress(\"\")\n        setDisplayDriverForm(false)\n        props.setShowDriveRemove(false)\n    }\n    const passRideInformation = async(e) =>{\n        e.preventDefault()\n        let str = rideAddress.replace(/\\s/g, '+');\n        let res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${str},+CA&key=AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y`)\n        let json = await res.json();\n        let place = json.results[0].geometry.location\n        props.setRideList([...props.rideList, {name: rideName, address: rideAddress, lat: place.lat, lng: place.lng, assign:\"unassigned\"}])\n        props.setAlert(<div className=\"alert\">\n            <img className=\"checkMark\" src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/Light_green_check.svg\"/>\n            {rideName} has been added to your map!</div>)\n        setRideName(\"\")\n        setRideAddress(\"\")\n        setDisplayRideForm(false)\n        props.setShowRemove(false)\n    }\n\n    return(\n        <div className=\"allLists\">\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Driver List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayDriverForm(!displayDriverForm)}} \n                         src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div>\n                {dataContext.driverAlert} \n                <ul>\n                    {props.makeDriverList}\n                </ul>\n                {displayDriverForm && (<form onSubmit={passDriverInformation}>\n                    <input className=\"formName\"\n                        type=\"text\" \n                        placeholder=\"Driver name\" \n                        onChange={handleDriverName} \n                        value={driverName}\n                        required=\"required\"/>\n                    <input className=\"formAddress\"\n                        type=\"text\" \n                        placeholder=\"Driver address\" \n                        onChange={handleDriverAddress} \n                        value={driverAddress}\n                        required=\"required\"/>\n                    <button>Add</button>   \n                </form>)}    \n            </div>\n            <div className=\"homeForm\">\n                <div className=\"titleList\">\n                    <h3>Passenger List</h3>\n                    <img className=\"addPerson\" onClick={()=>{setDisplayRideForm(!displayRideForm)}} src=\"https://storage.needpix.com/rsynced_images/user-2493635_1280.png\"/>\n                </div> \n                {props.alert}  \n                <ul>\n                    {props.makeRideList}\n                </ul> \n                {displayRideForm && (<form onSubmit={passRideInformation}>\n                <input className=\"formName\"\n                    type=\"text\" \n                    placeholder=\"Passenger name\" \n                    onChange={handleRideName} \n                    value={rideName}\n                    required=\"required\"/>\n                <input className=\"formAddress\"\n                    type=\"text\" \n                    placeholder=\"Passenger address\" \n                    onChange={handleRideAddress} \n                    value={rideAddress}\n                    required=\"required\"/>\n                <button>Add</button>  \n                </form>)}  \n            </div>\n        </div>    \n    )\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}