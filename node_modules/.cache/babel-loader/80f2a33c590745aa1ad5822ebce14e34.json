{"ast":null,"code":"var _jsxFileName = \"/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js\";\nimport React, { useState, useEffect } from 'react';\nimport DriverMarker from \"./DriverMarker\";\nimport RideMarker from \"./RideMarker\";\nimport DriverForm from \"./DriverForm\";\nimport RideForm from \"./RideForm\";\nimport GoogleMapReact from 'google-map-react';\n\nconst SimpleMap = props => {\n  //setting state\n  const [centerC, setCenter] = useState({\n    lat: 37.4275,\n    lng: -122.1697\n  });\n  const [zoom, setZoom] = useState(11);\n  const [driverAddress, setDriverAddress] = useState([]);\n  const [rideAddress, setRideAddress] = useState([{}]);\n\n  const getMapOptions = () => {\n    return {\n      disableDefaultUI: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'on'\n        }]\n      }]\n    };\n  }; //Pull in addresses from home and transfer into coordinates\n\n\n  const pullData = props.driverCoordinates.map((object, index) => {\n    if (props.driverCoordinates.length > 0) {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      });\n    }\n  });\n\n  const setDriverCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    }); // setLat(later)\n    // setLng(longer)\n\n    setDriverAddress([...driverAddress, {\n      lat: later,\n      lng: longer\n    }]);\n  };\n\n  const setCoordinates = (later, longer) => {\n    console.log(\"coordinates\", later, longer);\n    setCenter({\n      lat: later,\n      lng: longer\n    });\n    setRideAddress([...rideAddress, {\n      lat: later,\n      lng: longer\n    }]);\n    console.log(\"Ride Address\", rideAddress);\n  };\n\n  const createDriverMarkers = driverAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(DriverMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  const createRideMarkers = rideAddress.map((object, index) => {\n    if (Object.keys(object).length === 0) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(RideMarker, {\n        lat: object.lat,\n        lng: object.lng,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      });\n    }\n  });\n  console.log(\"What!\", driverAddress);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      height: '90vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DriverForm, {\n    coordinates: setDriverCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RideForm, {\n    coordinates: setCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: 'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y'\n    },\n    center: centerC,\n    defaultZoom: zoom //   options = {getMapOptions}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, createDriverMarkers, createRideMarkers));\n};\n\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/alyssajackson/Documents/React_App/seir-224-project-2/react_project/src/Components/SimpleMap.js"],"names":["React","useState","useEffect","DriverMarker","RideMarker","DriverForm","RideForm","GoogleMapReact","SimpleMap","props","centerC","setCenter","lat","lng","zoom","setZoom","driverAddress","setDriverAddress","rideAddress","setRideAddress","getMapOptions","disableDefaultUI","mapTypeControl","streetViewControl","styles","featureType","elementType","stylers","visibility","pullData","driverCoordinates","map","object","index","length","setDriverCoordinates","later","longer","console","log","setCoordinates","createDriverMarkers","Object","keys","createRideMarkers","height","width","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DriverMarker from \"./DriverMarker\"\nimport RideMarker from \"./RideMarker\"\nimport DriverForm from \"./DriverForm\"\nimport RideForm from \"./RideForm\"\nimport GoogleMapReact from 'google-map-react';\n\n\nconst SimpleMap = (props) => {\n    //setting state\n    const [centerC, setCenter] = useState({lat: 37.4275, lng: -122.1697});\n    const [zoom, setZoom] = useState(11);\n    const [driverAddress, setDriverAddress] = useState([])\n    const [rideAddress, setRideAddress] = useState([{}])\n\n    const getMapOptions = () => {\n      return {\n        disableDefaultUI: true,\n        mapTypeControl: true,\n        streetViewControl: true,\n        styles: [{ featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'on' }] }],\n      };\n    };\n     \n    //Pull in addresses from home and transfer into coordinates\n    const pullData = props.driverCoordinates.map((object, index)=> {\n        if(props.driverCoordinates.length >0){\n                return (\n                    <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n                )\n            }   \n        })\n    \n\n\n\n    \n    const setDriverCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        // setLat(later)\n        // setLng(longer)\n        setDriverAddress([...driverAddress, {lat: later, lng: longer}])\n      } \n    const setCoordinates = (later , longer)=>{\n        console.log(\"coordinates\", later, longer)\n        setCenter({lat: later, lng: longer})\n        setRideAddress([...rideAddress, {lat: later, lng: longer}])\n        console.log(\"Ride Address\", rideAddress)\n      }\n\n    const createDriverMarkers = driverAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n\n             </>\n\n         )\n        } else {\n        return (\n            <DriverMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    })  \n    const createRideMarkers = rideAddress.map((object, index)=>{\n        if (Object.keys(object).length === 0){\n         return (\n             <>\n             </>\n         )\n        } else {\n        return (\n            <RideMarker lat={object.lat} lng={object.lng} key={index}/>\n        )\n        }\n    }) \n    console.log(\"What!\", driverAddress)\n    return (\n        <div id=\"map\" style={{ height: '90vh', width: '100%' }}>\n            <DriverForm coordinates={setDriverCoordinates}/>\n            <RideForm coordinates={setCoordinates} />\n            {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/17/Ancient_Egypt_map-en.svg\" style={{ height: `90vh`, width: '100%' }}></img> */}\n            <GoogleMapReact\n            bootstrapURLKeys={{ key:'AIzaSyDJ56l2Y_6K3vN5rH30aKddRVljnEsuR_Y' }}\n            center= {centerC}\n            defaultZoom={zoom}\n            //   options = {getMapOptions}\n            > \n                {createDriverMarkers}\n                {createRideMarkers}\n            </GoogleMapReact>\n        </div>\n    );\n}\n\n    export default SimpleMap"]},"metadata":{},"sourceType":"module"}